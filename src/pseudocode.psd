1.Initialize Project

Initialize Node.js project
Install dependencies: express, firebase-admin, body-parser, multer
END

2.. Backend (Node.js + Firebase)

IMPORT firebase-admin
INITIALIZE Firebase Admin with credentials
SET db = Firestore instance
SET bucket = Firebase Storage bucket
END

Create Express Server
INITIALIZE Express application
USE body-parser for JSON
USE multer for file uploads
DEFINE PORT number (e.g., 5000)

Add Employee Endpoint
DEFINE POST /employees
    RECEIVE employeeData from request body

    ADD employeeData to Firestore collection 'employees'
        IF success THEN
            RETURN response 200 with message 'Employee added'
        ELSE
            RETURN response 500 with error message
        END
END

Get All Employees Endpoint
DEFINE GET /employees
    GET all documents from Firestore collection 'employees'

    IF documents exist THEN
        FOR each document in snapshot DO
            ADD document data to employees array
        END FOR
        RETURN response 200 with employees array
    ELSE
        RETURN response 404 with message 'No employees found'
    END
END

Update Employee Endpoint
DEFINE PUT /employees/:id
    GET employeeId from request params
    GET updatedData from request body

    UPDATE employee document in Firestore using employeeId
        IF success THEN
            RETURN response 200 with message 'Employee updated'
        ELSE
            RETURN response 500 with error message
        END
END

Delete Employee Endpoint
DEFINE DELETE /employees/:id
    GET employeeId from request params

    DELETE employee document from Firestore using employeeId
        IF success THEN
            RETURN response 200 with message 'Employee deleted'
        ELSE
            RETURN response 500 with error message
        END
END

Upload Employee Image
DEFINE POST /employees/:id/upload
    GET employeeId from request params
    GET image file from request

    DEFINE filePath for image in Firebase Storage

    UPLOAD image file to Storage bucket
        ON success THEN
            UPDATE employee document in Firestore with image URL
            RETURN response 200 with image URL
        ELSE
            RETURN response 500 with error message
        END
END

3. Frontend (React.js)

Setup Axios for API Calls
IMPORT axios
INITIALIZE Axios instance with baseURL
END

Fetch Employees in Component
USE useEffect to fetch employees on component mount
    CALL GET /employees
        IF success THEN
            SET employees state with response data
        ELSE
            LOG error message
        END
END

Handle Employee Form Submission
DEFINE handleSubmit(employeeData)
    IF isEditing THEN
        CALL PUT /employees/:id with employeeData
            IF success THEN
                ALERT 'Employee updated'
            ELSE
                ALERT error message
            END
    ELSE
        CALL POST /employees with employeeData
            IF success THEN
                ALERT 'Employee added'
            ELSE
                ALERT error message
            END
    END
END

Handle Employee Deletion
DEFINE handleDelete(employeeId)
    CALL DELETE /employees/:id
        IF success THEN
            ALERT 'Employee deleted'
        ELSE
            ALERT error message
        END
END
